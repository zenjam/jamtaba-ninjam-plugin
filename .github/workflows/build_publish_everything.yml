name: Build and publish everything

on:  
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'
        default: '2.1.20'
        required: true
      preRelease:
        description: 'Pre-Release'
        default: 'true'
        required: true

jobs:
  job_create_release:
    name: Create release
    runs-on: ubuntu-latest

    steps:
      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ github.event.inputs.version }}
          name: JamTaba v${{ github.event.inputs.version }}
          prerelease: true

  job_build_upload_win:
    name: Build and upload
    needs: job_create_release
    runs-on: ubuntu-latest
    container: 
      image: defter/jamtaba-${{ matrix.os }}:v5.15.7
    strategy:
      matrix:
        os:
          - win32
          - win64
    steps:
      - name: Chekout
        uses: actions/checkout@v4

      - name: Build everything
        shell: bash
        env:
          JAMTABA_VERSION: ${{ github.event.inputs.version }}
        run: |
          cd ./PROJECTS
          qmake . CONFIG+=release
          make -j$(nproc)

      - name: Create applications archive
        shell: bash
        run: |
          cd ./PROJECTS/Standalone/release
          zip Jamtaba.Standalone.${{ matrix.os }}.zip Jamtaba2.exe VstScanner.exe
          mv Jamtaba.Standalone.${{ matrix.os }}.zip ../../../

      - name: Create plugin archive
        shell: bash
        run: |
          cd ./PROJECTS/VstPlugin/release
          zip Jamtaba.VST.${{ matrix.os }}.zip JamtabaVST2.dll
          mv Jamtaba.VST.${{ matrix.os }}.zip ../../../

      - name: Upload applications archive
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ github.event.inputs.version }}
          files: |
            Jamtaba.Standalone.${{ matrix.os }}.zip
            Jamtaba.VST.${{ matrix.os }}.zip

  job_build_upload_linux:
    name: Build and upload
    needs: job_create_release
    runs-on: ubuntu-latest
    container: 
      image: defter/jamtaba-${{ matrix.os }}:v5.15.7
    strategy:
      matrix:
        os:
          - linux
    steps:
      - name: Chekout
        uses: actions/checkout@v4

      - name: Build everything
        shell: bash
        env:
          JAMTABA_VERSION: ${{ github.event.inputs.version }}
        run: |
          cd ./PROJECTS
          qmake . CONFIG+=release
          make -j$(nproc)

      - name: Create applications archive
        shell: bash
        run: |
          cd ./PROJECTS/Standalone
          tar -cvzf Jamtaba.Standalone.${{ matrix.os }}.tar.gz Jamtaba2 VstScanner
          mv Jamtaba.Standalone.${{ matrix.os }}.tar.gz ../../

      - name: Upload applications archive
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ github.event.inputs.version }}
          files: Jamtaba.Standalone.${{ matrix.os }}.tar.gz

  job_finalize_release:
    name: Finalize release
    if: always()
    needs: [job_build_upload_win, job_build_upload_linux]
    runs-on: ubuntu-latest

    steps:
      - name: Complete release
        if: success()
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ github.event.inputs.version }}
          prerelease: ${{ github.event.inputs.preRelease }}
